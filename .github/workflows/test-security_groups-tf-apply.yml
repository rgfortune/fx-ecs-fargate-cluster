name: 'test-security_groups-tf-apply'

on:
  workflow_run:
    workflows: [test-vpc-tf-apply]
    types: [completed]
  workflow_dispatch:

jobs:
  security_groups:
    name: 'security_groups'
    runs-on: ubuntu-latest
    environment: test
    env:
      # Account and Environment
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.4

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ./environments/test/2_security_groups

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./environments/test/2_security_groups

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -var-file=../test.tfvars
      working-directory: ./environments/test/2_security_groups

    # Apply the Terraform execution plan
    - name: Terraform Apply
      run: terraform apply -auto-approve -var-file=../test.tfvars
      working-directory: ./environments/test/2_security_groups